[program:gunicorn]
# Run the command from the directory containing the WSGI file. Using a symlink
# to get to this directory removes the need to modify the supervisor program
# with different project names.
directory=/opt/app/ln/package_dir/

# Explicitly include /opt/app/src/ in the PYTHONPATH since gunicorn is not
# run from that directory (per the "directory" setting above). This ensures it
# is consistent with the behaviour of the Django runserver and other management
# commands, which *are* run from that directory.
# Specifically, it allows packages/modules that are siblings to the Django
# project package to be imported and used. E.g. Given a project named
# "myproject" and a directory structure as shown below, this allows the use of
# "from mylib import myutils":
#
# myproject
#  - manage.py
#  - myproject
#     - settings.py
#     - wsgi.py
#  - mylib
#     - myutils.py
environment=PYTHONPATH="/opt/app/src/:$PYTHONPATH"

command=/opt/app/ln/virtualenv/bin/gunicorn -c /etc/gunicorn/conf.py wsgi:application
user=www-data
autostart=true
autorestart=true
stderr_logfile=/opt/app/logs/gunicorn/error.log
